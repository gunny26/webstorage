# BACKEND Part
#
# on ubuntu 14.04.x or debian jessie
#
# first install apache2
sudo apt-get install apache2
# next install wsgi for python 2.x
sudo apt-get install libapache2-mod-wsgi
# and next web.py
sudo apt-get install python-webpy
# next configure default site or every other NameVirtualHost
# to start wsgi applications
# something like this

    # BlockStorage Application    
    WSGIDaemonProcess blockstorage processes=1 threads=10
    WSGIScriptAlias /blockstorage /var/www/webstorage/webapps/blockstorage/code.py
    WSGIProcessGroup blockstorage
    # FileStorage Application    
    WSGIDaemonProcess filestorage processes=1 threads=10
    WSGIScriptAlias /filestorage /var/www/webstorage/webapps/filestorage/code.py

# additional optimize apache for minimal memory usage
# not all lines are available on ubuntu and debian
sudo a2dismod -f authn_file
sudo a2dismod -f authz_host
sudo a2dismod -f authz_user
sudo a2dismod -f autoindex
sudo a2dismod -f deflate
sudo a2dismod -f dir
sudo a2dismod -f env
sudo a2dismod -f filter
sudo a2dismod -f negotiation
sudo a2dismod -f setenvif
sudo a2dismod -f status
sudo a2dismod -f alias
sudo a2dismod -f mime
sudo a2disconf javascript-common
sudo a2disconf localized-error-pages
sudo a2disconf serve-cgi-bin
sudo apache2ctl restart # to see error messages
sudo service apache2 restart

# at last define some directories to store data
# these dierctory must be fully accessible for the webserver user
# on my example server i mounted /dev/sda on /media/webstorage
export WEBSTORAGE=/path/to/directory
mkdir $WEBSTORAGE
mount /big/block/device $WEBSTORAGE
mkdir $WEBSTORAGE/blockstorage
chown www-run $WEBSTORAGE/blockstorage
mkdir $WEBSTORAGE/filestorage
chown www-run $WEBSTORAGE/filestorage


#
# to install client part only
#
# create ~/.webstorage/ directory
# first get apikey for 

BlockStorage
FileStorage
WebstorageArchive

# create WenStorageArchive.ini file like this
# /home/mesznera/.webstorage/WebStorageClient.ini 
URL_BLOCKSTORAGE=https://host.domain/blockstorage
APIKEY_BLOCKSTORAGE=65a7dfd9-3d41-4135-81ca-ffffffffffff
URL_FILESTORAGE=https://host.domain/filestorage
APIKEY_FILESTORAGE=65a7dfd9-3d41-4135-81ca-ffffffffffff
URL_WEBSTORAGE_ARCHIVE=https://host.domain/webstoragearchive
APIKEY_WEBSTORAGE_ARCHIVE=65a7dfd9-3d41-4135-81ca-ffffffffffff
BLOCKSIZE=1048576

# for singning webstorage archives, create private/public key pair
openssl genrsa -out private.der 4096
openssl rsa -in private.der -pubout -out public.der
# for signing the private key is needed

# maybe you want some basic exclude.txt file in .webstorage subdir like
- /home/user/Downloads
- /home/user/tmp
- /home/user/.cache
- /home/user/.config/chromium
- /home/user/.mozilla/firefox
- /home/user/.webstorage

# then you should make the first backup, must be full backup
python3 /home/user/gits/webstorage/bin/wstar_devel.py -c -p /home/user/ -e /home/user/.webstorage/exclude.txt

# maybe you need some sort of batch file like
#/bin/bash
python3 /home/user/gits/webstorage/bin/wstar_devel.py -d -p /home/user/ -e /home/user/.webstorage/exclude.txt

# this batchfile could b implmented as startup program
#

# for installation on raspbian stretch with python3 wsgi interface and webapp
#
sudo apt install git
sudo apt install vim
cd /opt/
sudo git clone https://github.com/gunny26/webstorage
sudo chown pi.pi webstorage -R
# also get web.py git repository
cd /opt
sudo git clone https://github.com/webpy/webpy.git
sudo chown pi.pi webpy -R
cd webpy/
sudo apt install python3-setuptools
sudo python3 setup.py install
# install and configure apache2
sudo apt install apache2
sudo apt install libapache2-mod-wsgi-py3
sudo vim /etc/apache2/sites-enabled/000-default.conf 
sudo vim /var/www/blockstorage.ini
sudo vim /var/www/blockstorage_apikeys.json
sudo a2enmod wsgi
sudo systemctl reload apache2.service 
sudo mkdir /srv/webstorage
sudo mkdir /srv/webstorage/blockstorage
sudo mkdir /srv/webstorage/filestorage
sudo chown www-data.www-data /srv/webstorage -R


# add deflate config option, to compress application/json
# something like that
<IfModule mod_deflate.c>
	<IfModule mod_filter.c>
		# these are known to be safe with MSIE 6
		AddOutputFilterByType DEFLATE text/html text/plain text/xml

		# everything else may cause problems with MSIE 6
		AddOutputFilterByType DEFLATE text/css
		AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/ecmascript
		AddOutputFilterByType DEFLATE application/rss+xml
		AddOutputFilterByType DEFLATE application/xml
		AddOutputFilterByType DEFLATE application/json
	</IfModule>
</IfModule>

